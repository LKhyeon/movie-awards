{"version":3,"sources":["components/search.js","components/movieList.js","components/nomination.js","App.js","reportWebVitals.js","index.js"],"names":["Search","eventHandler","className","placeholder","onKeyPress","MovieList","props","state","entries","fetchData","bind","populateList","keyWord","fetch","then","res","status","json","newEntries","setState","catch","error","console","log","this","movies","i","length","push","Title","Year","toString","Component","Nomination","App","changeKey","event","key","target","value","nominations","entry","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TAaeA,EAXA,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAChB,OACC,sBAAKC,UAAU,SAAf,UACC,8CACA,uBACCC,YAAa,iBACbC,WAAYH,QCuDDI,G,wDAzDd,WAAYC,GAAQ,IAAD,8BACZ,cAAMA,IACDC,MAAQ,CACTC,QAAS,IAEb,EAAKC,UAAY,EAAKA,UAAUC,KAAf,gBACjB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBANR,E,6CAShB,SAAUE,GAAU,IAAD,OACF,KAAZA,GACHC,MAAM,8BAAgCD,EAAU,oBAC5CE,MAAK,SAAAC,GACF,GAAmB,MAAfA,EAAIC,OACJ,OAAOD,EAAIE,UAEhBH,MAAK,SAACC,GACR,IAAMG,EAAoC,qBAAfH,EAAIf,OAA0B,GAAKe,EAAIf,OAC9D,EAAKO,MAAMC,UAAYU,GAC1B,EAAKC,SAAS,CACbX,QAASU,OAGTE,OAAM,SAACC,GAAWC,QAAQC,IAAIF,Q,0BAItC,WACCG,KAAKf,UAAUe,KAAKlB,MAAMM,SAE1B,IADA,IAAMa,EAAS,GACNC,EAAI,EAAGA,EAAIF,KAAKjB,MAAMC,QAAQmB,OAAQD,IAC9CD,EAAOG,KACN,gCACEJ,KAAKjB,MAAMC,QAAQkB,GAAGG,MADxB,KACiCL,KAAKjB,MAAMC,QAAQkB,GAAGI,KADvD,MAAUN,KAAKlB,MAAMM,QAAUc,EAAEK,aAKhC,OAAON,I,oBAGX,WAEC,OADAH,QAAQC,IAAIC,KAAKjB,MAAMC,SAEzB,sBAAKN,UAAU,YAAf,UACC,mBAAGA,UAAU,UAAb,SACyB,KAAvBsB,KAAKlB,MAAMM,QACX,4BACA,gBAAmBY,KAAKlB,MAAMM,QAAU,MAE1C,8BACEY,KAAKb,wB,GApDaqB,cCQTC,G,MAVI,SAAC,GAAc,EAAbzB,QACpB,OACC,qBAAKN,UAAU,aAAf,SACC,mBAAGA,UAAU,UAAb,6BCwCYgC,G,wDApCX,WAAY5B,GAAQ,IAAD,8BACf,cAAMA,IAQV6B,UAAY,SAACC,GACS,UAAdA,EAAMC,KACN,EAAKlB,SAAS,CACVP,QAASwB,EAAME,OAAOC,SAV9B,EAAKhC,MAAQ,CACTK,QAAS,GACT4B,YAAa,IAEjB,EAAKL,UAAY,EAAKA,UAAUzB,KAAf,gBANF,E,0CAiBnB,WACI,OACI,sBAAKR,UAAU,MAAf,UACI,wBAAQA,UAAU,aAAlB,SACI,gDAIJ,cAAC,EAAD,CAAQD,aAAcuB,KAAKW,YAC3B,sBAAKjC,UAAU,YAAf,UACI,cAAC,EAAD,CAAWU,QAASY,KAAKjB,MAAMK,UAC/B,cAAC,EAAD,CAAY6B,MAAOjB,KAAKjB,MAAMiC,wB,GA7BhCR,cCIHU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB9B,MAAK,YAAkD,IAA/C+B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.395f1004.chunk.js","sourcesContent":["import \"./css/search.css\"\n\nconst Search = ({eventHandler}) => {\n\treturn (\n\t\t<div className=\"Search\">\n\t\t\t<p> MOVIE TITLE </p>\n\t\t\t<input \n\t\t\t\tplaceholder={\"Search a movie\"}\n\t\t\t\tonKeyPress={eventHandler} />\n\t\t</div>\n\t)\n}\n\nexport default Search;","import React, {Component} from \"react\"\n\nimport \"./css/movieList.css\"\n\nclass MovieList extends Component {\n\n\tconstructor(props) {\n        super(props)\n        this.state = {\n            entries: [],\n        }\n        this.fetchData = this.fetchData.bind(this);\n        this.populateList = this.populateList.bind(this);\n    }\n  \t\n    fetchData(keyWord) {\n    \tif (keyWord !== \"\") {\n\t    \tfetch(\"https://www.omdbapi.com/?s=\" + keyWord + \"&apikey=39dd2421\")\n\t        .then(res => {\n\t            if (res.status === 200) {\n\t                return res.json()\n\t            }\n\t        }).then((res) => {\n\t        \tconst newEntries = (typeof res.Search === \"undefined\") ? [] : res.Search;\n\t        \tif (this.state.entries !== newEntries) {\n\t        \t\tthis.setState({\n\t        \t\t\tentries: newEntries\n\t        \t\t})\n\t        \t}\n\t        }).catch((error) => {console.log(error)})\n    \t}\n    }\n\n    populateList() {\n    \tthis.fetchData(this.props.keyWord)\n    \tconst movies = [];\n    \tfor (let i = 0; i < this.state.entries.length; i++) {\n    \t\tmovies.push(\n    \t\t\t<div key={this.props.keyWord + i.toString()}>\n    \t\t\t\t{this.state.entries[i].Title} ({this.state.entries[i].Year})\n    \t\t\t</div>\n    \t\t)\n    \t}\n        return movies;\n    }\n\n    render() {\n    \tconsole.log(this.state.entries)\n    \treturn (\n\t\t\t<div className=\"MovieList\">\n\t\t\t\t<p className=\"KeyWord\"> \n\t\t\t\t\t{this.props.keyWord === \"\" ? \n\t\t\t\t\t\t\"Please type a movie title\" : \n\t\t\t\t\t\t\"Results for \\\"\" + this.props.keyWord + \"\\\"\"} \n\t\t\t\t</p>\n\t\t\t\t<div>\n\t\t\t\t\t{this.populateList()}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n    }\n}\n\nexport default MovieList;","import \"./css/nomination.css\"\n\nconst Nomination = ({entries}) => {\n\treturn (\n\t\t<div className=\"Nomination\">\n\t\t\t<p className=\"KeyWord\"> \n\t\t\t\tNominations\n\t\t\t</p>\n\t\t</div>\n\t)\n}\n\nexport default Nomination;","import React, {Component} from \"react\"\n\nimport Search from './components/search'\nimport MovieList from './components/movieList'\nimport Nomination from './components/nomination'\n\nimport './App.css';\n\nclass App extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            keyWord: \"\",\n            nominations: [],\n        }\n        this.changeKey = this.changeKey.bind(this);\n    }\n\n    changeKey = (event) => {\n        if (event.key === 'Enter') {\n            this.setState({\n                keyWord: event.target.value\n            });\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <header className=\"App-header\">\n                    <h1>\n                        The Shoppies\n                    </h1>\n                </header>\n                <Search eventHandler={this.changeKey}/>\n                <div className=\"Container\">\n                    <MovieList keyWord={this.state.keyWord}/>\n                    <Nomination entry={this.state.nominations}/>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}